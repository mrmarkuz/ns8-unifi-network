#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys
import json
import agent
import socket
import errno


# retrieve json data
data = json.load(sys.stdin)
port = data['port']

# set error validation
agent.set_weight(os.path.basename(__file__), 0)

# if we have the same port, lets go further
if str(port) == os.environ.get('PORT',""):
    sys.exit(0)

try:
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.bind(('', port))
    sock.close()
    sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)
    sock.bind(('', port))
    sock.close()
except OSError as ex:
    if ex.errno != errno.EADDRINUSE:
        raise
    agent.set_status('validation-failed')
    json.dump([{'field':'port','parameter':'port','value':port,'error':'tcp_port_already_used'}],fp=sys.stdout)
    sys.exit(2)